from aiogram import Router, F
from aiogram.filters import Command
from aiogram.types import Message, CallbackQuery

from app.keyboards.admin_inline import admin_inline_kb
from app.config import ADMINS
from app.db import async_session_maker
from app.models import Admin

router = Router()


# === –ö–æ–º–∞–Ω–¥–∞ /admin ===
@router.message(Command("admin"))
async def admin_menu(message: Message):
    user_id = message.from_user.id

    # –ü—Ä–æ–≤–µ—Ä—è–µ–º –¥–æ—Å—Ç—É–ø
    is_admin = False
    if user_id in ADMINS:
        is_admin = True
    else:
        async with async_session_maker() as session:
            admin = await session.get(Admin, user_id)
            if admin:
                is_admin = True

    if not is_admin:
        await message.answer("‚õî –£ –≤–∞—Å –Ω–µ—Ç –¥–æ—Å—Ç—É–ø–∞ –∫ –∞–¥–º–∏–Ω–∫–µ.")
        return

    # –ï—Å–ª–∏ –∞–¥–º–∏–Ω ‚Üí –ø–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é
    await message.answer("‚öôÔ∏è –ê–¥–º–∏–Ω-–ø–∞–Ω–µ–ª—å", reply_markup=admin_inline_kb())


# === –ó–∞–≥–ª—É—à–∫–∏ –¥–ª—è –∫–Ω–æ–ø–æ–∫ ===

@router.callback_query(F.data == "admin:add")
async def admin_add(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚ûï –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–¥–æ–±–∞–≤–ª–µ–Ω–∏–µ FAQ —á–µ—Ä–µ–∑ 2 —à–∞–≥–∞: –≤–æ–ø—Ä–æ—Å ‚Üí –æ—Ç–≤–µ—Ç).")


@router.callback_query(F.data == "admin:delete")
async def admin_delete(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("üóë –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–≤—ã–±–æ—Ä FAQ –¥–ª—è —É–¥–∞–ª–µ–Ω–∏—è).")


@router.callback_query(F.data == "admin:edit")
async def admin_edit(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("‚úè –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (—Ä–µ–¥–∞–∫—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ FAQ).")


@router.callback_query(F.data == "admin:unanswered")
async def admin_unanswered(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("üìù –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (–ø–æ–∫–∞–∑ –ø–æ—Å–ª–µ–¥–Ω–∏—Ö N –Ω–µ–ø—Ä–æ—Å–º–æ—Ç—Ä–µ–Ω–Ω—ã—Ö –≤–æ–ø—Ä–æ—Å–æ–≤).")


@router.callback_query(F.data == "admin:broadcast")
async def admin_broadcast(callback: CallbackQuery):
    await callback.answer()
    await callback.message.answer("üì£ –í —Ä–∞–∑—Ä–∞–±–æ—Ç–∫–µ (—Ä–∞—Å—Å—ã–ª–∫–∞).")
